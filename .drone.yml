kind: pipeline
type: docker
name: default

steps:
- name: install_dependencies
  image: node
  commands:
  # Navigate to the server directory and install dependencies
  - cd server
  - npm install
  # Navigate to the web_app directory and install dependencies
  - cd ../web_app
  - npm install

- name: run_dev_servers
  image: node
  commands:
  # Run the server in the background and capture its PID in an absolute path
  - cd server
  - npm run dev &
  - echo $! > /tmp/server_pid
  # Debugging: Print the server PID and list running processes
  - echo "Server PID: $(cat /tmp/server_pid)"
  - ps -ef | grep node
  # Add a delay to ensure the server has time to start and write its PID
  - sleep 5
  # Run the web app in the background and capture its PID in an absolute path
  - cd ../web_app
  - npm run dev &
  - echo $! > /tmp/web_app_pid
  # Debugging: Print the web app PID and list running processes
  - echo "Web App PID: $(cat /tmp/web_app_pid)"
  - ps -ef | grep node
  # Add a delay to ensure the web app has time to start and write its PID
  - sleep 5

- name: stop_dev_servers
  image: node
  commands:
  # Attempt to stop the web app process using its PID stored in /tmp/web_app_pid
  - echo "Attempting to stop web app"
  - if [ -f /tmp/web_app_pid ]; then cat /tmp/web_app_pid; else echo "/tmp/web_app_pid not found"; fi
  - kill $(cat /tmp/web_app_pid) || echo "Failed to kill web app"
  # Attempt to stop the server process using its PID stored in /tmp/server_pid
  - echo "Attempting to stop server"
  - if [ -f /tmp/server_pid ]; then cat /tmp/server_pid; else echo "/tmp/server_pid not found"; fi
  - kill $(cat /tmp/server_pid) || echo "Failed to kill server"
